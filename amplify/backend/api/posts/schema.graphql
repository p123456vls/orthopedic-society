type Blog @model {
  id: ID!
  name: String!
  posts: [Post] @connection(name: "BlogPosts")
  createdAt: String
}
type Post @model @searchable {
  id: ID!
  title: String!
  description: String!
  file: [S3Object]
  blog: Blog @connection(name: "BlogPosts")
  user: User @connection(name: "UserPosts")
  comments: [Comment] @connection(name: "PostComments")
  createdAt: String
}
type Comment @model @searchable {
  id: ID!
  content: String
  file: [S3Object]
  user: User @connection(name: "UserComments")
  post: Post @connection(name: "PostComments")
  createdAt: String
}

type S3Object {
  bucket: String!
  region: String!
  key: String!
}

type User
@model(
  queries: { get: "getUser" }
  mutations: { create: "registerUser", update: "updateUser" }
  subscriptions: null
) {
  id: ID!
  name: String!
  email: String!
  posts: [Post] @connection(name: "UserPosts", sortField: "createdAt")
  comments: [Comment] @connection(name: "UserComments", sortField: "createdAt")
  createdAt: String
}